
package OODJ_Assignment;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

public class SuperAdmin_Menu extends javax.swing.JFrame {
    private boolean declared = false;
    Customer.getCustomer cust = new Customer.getCustomer();
    /**
     * Creates new form SuperAdmin_Menu
     */
    public SuperAdmin_Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        topCust = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        topCar = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maleP = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        femaleP = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        Butt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        feed = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(204, 255, 153));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setText("Top Customer:");

        topCust.setText("topCust");

        jLabel3.setText("Top Car:");

        topCar.setText("topCar");

        jLabel5.setText("Male Percentage:");

        maleP.setText("%");

        jLabel7.setText("Female Percentage");

        femaleP.setText("%");

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Jan", null, null},
                {"Feb", null, null},
                {"Mar", null, null},
                {"Apr", null, null},
                {"May", null, null},
                {"Jun", null, null},
                {"Jul", null, null},
                {"Aug", null, null},
                {"Sep", null, null},
                {"Oct", null, null},
                {"Nov", null, null},
                {"Dec", null, null}
            },
            new String [] {
                "2022 Month", "Top Car", "Top Customer"
            }
        ));
        reportTable.setShowGrid(true);
        jScrollPane3.setViewportView(reportTable);

        Butt.setText("Generate");
        Butt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtMouseClicked(evt);
            }
        });
        Butt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(topCust))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(maleP)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(topCar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(femaleP)))
                .addGap(213, 213, 213))
            .addComponent(jScrollPane3)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(Butt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(topCust)
                    .addComponent(jLabel3)
                    .addComponent(topCar))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(maleP)
                    .addComponent(jLabel7)
                    .addComponent(femaleP))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(Butt)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Report", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        feed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(feed);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 132, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Feedback", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(bookTable);

        jButton1.setText("MAIN MENU");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bookings", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(!declared){
            declared = true;
            String filePath = "booking.txt";
            File file = new File(filePath);
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                String firstLine = br.readLine().trim();
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
                model.setColumnIdentifiers(columnsName);
                Object[] tableLines = br.lines().toArray();
                for (int i = 0; i < tableLines.length; i++) {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }

            } catch (IOException e) {
                System.out.println("Incorrect File");
            }
            filePath = "feedback.txt";
            file = new File(filePath);
            try {
                BufferedReader br = new BufferedReader(new FileReader(file));
                String firstLine = br.readLine().trim();
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel) feed.getModel();
                model.setColumnIdentifiers(columnsName);
                Object[] tableLines = br.lines().toArray();
                for (int i = 0; i < tableLines.length; i++) {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }

            } catch (IOException e) {
                System.out.println("Incorrect File");
            }
        }
    }//GEN-LAST:event_formWindowActivated

    private void ButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtActionPerformed

    private void ButtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtMouseClicked
        //USERNAME,CAR ID,CARNAME,CARMODEL,DATE,TOTAL PRICE,PAYMENT,CONFIRMATION
        ArrayList<String> username = new ArrayList();
        ArrayList<String> id = new ArrayList();
        ArrayList<String> carname = new ArrayList();
        ArrayList<String> model = new ArrayList();
        ArrayList<String> date = new ArrayList();
        ArrayList<String> price = new ArrayList();
        try(BufferedReader file = new BufferedReader(new FileReader("booking.txt"))){
            String line;
            file.readLine();
            while((line = file.readLine()) != null){
                String[] commas = line.split(",");
                username.add(commas[0]);
                id.add(commas[1]);
                carname.add(commas[2]);
                model.add(commas[3]);
                date.add(commas[4]);
                price.add(commas[5]);
            }

        }
        catch(IOException e){
            System.out.println("Incorrect File");
        }
        ArrayList<String> users = cust.getCustUser();
        ArrayList<Integer> count = new ArrayList();
        int x = cust.getCustCount();
        for(int i=0;i<x;i++){
            count.add(Collections.frequency(username,users.get(i)));
        }
        int max = 0;
        int index =0;
        for (int i = 0; i < count.size(); i++) {
            if(count.get(i)>max){
                max = count.get(i);
                index = i;
            }
        }
       topCust.setText(users.get(index));
       ArrayList<String> names = readCarFile();
       count.clear();
       for(int i=0;i<names.size();i++){
            count.add(Collections.frequency(carname,names.get(i)));
        }
        max = 0;
        index =0;
        for (int i = 0; i < count.size(); i++) {
            if(count.get(i)>max){
                max = count.get(i);
                index = i;
            }
        }
        topCar.setText(names.get(index));
        ArrayList<String> genders = cust.getGenders();
        count.clear();
        count.add(Collections.frequency(genders,"Female"));
        count.add(Collections.frequency(genders,"Male"));
        double female = ((double)count.get(0)/genders.size())*100;
        femaleP.setText(female+"%");
        double male = ((double)count.get(1)/genders.size())*100;
        maleP.setText(male+"%");
        count.clear();
        ArrayList<String> months = new ArrayList();
        Collections.addAll(months,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
        ArrayList<String> Names = new ArrayList();
        ArrayList<String> Cars = new ArrayList();
        ArrayList<Integer> countCars = new ArrayList();
        for(int y=0;y<12;y++){
            for(int i=0;i<date.size();i++){
                if(date.get(i).substring(3, 6).equals(months.get(y))){
                    Names.add(username.get(i));
                    Cars.add(carname.get(i));
                }
                if(i==date.size()-1){
                    count.clear();
                    countCars.clear();
                    for (int q = 0; q < x; q++) {
                        count.add(Collections.frequency(Names, users.get(q)));
                    }
                    max = 0;
                    index = 0;
                    for (int w = 0; w < count.size(); w++) {
                        if (count.get(w) > max) {
                            max = count.get(w);
                            index = w;
                        }
                    }
                    for (int e = 0; e < names.size(); e++) {
                        countCars.add(Collections.frequency(Cars, names.get(e)));
                    }
                    int carmax = 0;
                    int carindex = 0;
                    for (int r = 0; r < countCars.size(); r++) {
                        if (countCars.get(r) > carmax) {
                            carmax = countCars.get(r);
                            carindex = r;
                        }
                    }
                    reportTable.setValueAt(users.get(index), y, 2);
                    reportTable.setValueAt(names.get(carindex), y, 1);
//                    System.out.println(months.get(y));
//                    System.out.println(Names);
//                    System.out.println(Cars);
                    Names.clear();
                    Cars.clear();
                }
            }
        }
    }//GEN-LAST:event_ButtMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainMenu a = new MainMenu();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private ArrayList<String> readCarFile(){
        ArrayList<String> name = new ArrayList();
        try(BufferedReader file = new BufferedReader(new FileReader("Cars.txt"))){
            String line;
            file.readLine();
            while((line = file.readLine()) != null){
                String[] commas = line.split(",");
                name.add(commas[1]);
            }
        }
        catch(IOException e){
            System.out.println("Incorrect File");
        }
        return name;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperAdmin_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Butt;
    private javax.swing.JTable bookTable;
    private javax.swing.JTable feed;
    private javax.swing.JLabel femaleP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel maleP;
    private javax.swing.JTable reportTable;
    private javax.swing.JLabel topCar;
    private javax.swing.JLabel topCust;
    // End of variables declaration//GEN-END:variables
}
